#!/bin/bash

state_file="${HOME}/.local/state/tofi-ssh-history"

if [ ! -f "${state_file}" ]; then
   touch "${state_file}"
fi

# A list of hosts we've used before, where we don't uniq them until merged with
# known hosts so we can do a frequency sort.
used_hosts="$(cat "${state_file}")"
# A unique list of known hosts
known_hosts="$(awk '{sub(/,.*/, "", $1); print $1}' ~/.ssh/known_hosts | sort | uniq)"

# Now, we build a sorted list based on frequency of use.
sorted_hosts="$((echo "${used_hosts}"; echo "${known_hosts}") | sort | uniq -c | sort -nr | awk '{print $2}')"

# Present the frequency sorted list for user selection
selected_host="$(echo "${sorted_hosts}" | tofi --prompt-text="Host: ")"


# tofi will exit 0 even if no selection is made or we hit escape.
if [ -n "${selected_host}" ]; then
  # Record this host and retain the most recently used 100 hosts in the state
  # file
  echo "${selected_host}" >> "${state_file}"
  tail -100 "${state_file}" > "${state_file}.last100" && mv "${state_file}.last100" "${state_file}"

  foot -- ~/.bdwscripts/bdw-ssh-wrapper "${selected_host}"
fi
