# -*- mode: i3wm-config -*-

# sway config

# Ensure we have a few environment variables set such that other apps
# depending on them will function correctly.
exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK

exec hash dbus-update-activation-environment 2>/dev/null && \
        dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK

set $mod Mod4

set $font pango:Liberation Mono Regular 12

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below. ISO 10646 = Unicode
font $font

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Quick access to workspaces
bindsym KP_1 workspace 1
bindsym KP_2 workspace 2
bindsym KP_3 workspace 3
bindsym KP_4 workspace 4
bindsym KP_5 workspace 5
bindsym KP_6 workspace 6
bindsym KP_7 workspace 7
bindsym KP_8 workspace 8
bindsym KP_9 workspace 9

# Setup a scratchpad config that is amenable to firing up emacs client
for_window [class="Emacs"] move window to scratchpad, scratchpad show, resize set 1536 1009, move position center, border normal 10
for_window [class="Emacs" floating] resize set 1536 1009, move position center

bindsym $mod+P exec --no-startup-id ~/.bdwscripts/locked-emacs
bindsym $mod+minus scratchpad show

bindsym $mod+Print exec grim -g "$(slurp -d)"

# start a terminal
bindsym $mod+Return exec gnome-terminal

# start Chrome
bindsym $mod+c exec google-chrome --user-data-dir=.config/google-chrome-$HOSTNAME

# start Thunar file manager
bindsym $mod+t exec thunar

# lock the screen (ctrl+alt+l)
bindsym Control+Mod1+l exec loginctl lock-session

# volume up/down/mute
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 '+5%'
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 '-5%'
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle

# kill focused window
bindsym $mod+Shift+q kill

# start rofi (a program launcher)
bindsym $mod+d exec "rofi -modi 'drun,run' -show drun"
# start rofi (an ssh wrapper)
bindsym $mod+x exec "rofi -modi 'ssh' -show ssh"

# change focus
bindsym $mod+Left focus left
bindsym $mod+j focus left
bindsym $mod+Down focus down
bindsym $mod+k focus down
bindsym $mod+Up focus up
bindsym $mod+i focus up
bindsym $mod+Right focus right
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+i move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# close notifications
bindsym $mod+semicolon exec dunstctl close-all

# reload the configuration file
bindsym $mod+Shift+c reload

# exit sway (logs you out of your session), with mod+shift+e x2
mode "exit" {
        bindsym $mod+Shift+e exec swaymsg exit

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
bindsym $mod+Shift+e mode "exit"

# New window decoration
default_border normal 3

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"


# zenburn colour scheme
# <colorclass>              <border> <background> <text>  <indicator> <child_border>
client.focused              #3f3f3f  #282a2e      #f0dfaf #ffcfaf
client.focused_inactive     #3f3f3f  #282a2e      #c5c8c6 #3f3f3f
client.unfocused            #3f3f3f  #282a2e      #c5c8c6 #3f3f3f
client.urgent               #dca3a3  #dca3a3      #dcdccc #3f3f3f

input * {
      xkb_options caps:ctrl_modifier
}

# External @ home
output DP-2 pos 0 0
# External @ work
output HDMI-A-1 pos 0 0
# Internal
output eDP-1 pos 3840 0

bar {
    swaybar_command waybar
}


exec dex -ae sway
exec --no-startup-id /usr/libexec/gsd-xsettings

# Screen locking
set $lock swaylock -f -e

exec swayidle -w \
     timeout 300 "$lock" \
     timeout 360 'swaymsg "output * dpms off"' \
     resume 'swaymsg "output * dpms on"' \
     timeout 60  'if pgrep swaylock; then swaymsg "output * dpms off"; fi' \
     resume 'if pgrep swaylock; then swaymsg "output * dpms on"; fi' \
     before-sleep "$lock" \
     lock "$lock"

# idle inhibit tool; dies if already running, so exec_always is fine.
exec_always ~/.local/bin/inhibit-bridge
# inhibit-bridge will toggle manual inhibit state on receiving SIGUSR1
bindsym $mod+shift+t exec bash -c 'killall -USR1 inhibit-bridge'
