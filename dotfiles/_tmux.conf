# Global options

# Stylization works differently after version 2.9, and we want to
# support old and new modes, so we set an environment variable which
# will let us branch.
run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | \
                           sed -En "s/^tmux[^0-9]*([.0-9]+).*/\1/p")'

# We want tmux to spawn interactive, but not login shells. We reserve
# the login option for the terminal emulator (or native login) as that
# is where we auto-join tmux.
set -g default-command ${SHELL}
set -g default-shell ${SHELL}

set -g default-terminal xterm-256color
set -g destroy-unattached on
set -g history-limit 10000
set -g set-titles-string "*#T"
set -g set-titles on

# Theme config: zenburn, taken from:
# https://github.com/plathrop/dotfiles/blob/master/tmux/zenburn.conf
# Modernized for tmux v 2.9+
setw -g clock-mode-colour colour117
setw -g mode-style fg=colour117,bg=colour238,bold
set -g status-style fg=colour248,bg=colour235,dim
set -g status-left '#[fg=colour187,bold]#h '
set -g status-left-length 15
set -g status-right '#[fg=colour174]#(mpc) #[fg=colour187,bold]%H:%M'
set -g status-right-length 80
setw -g window-status-current-style fg=colour223,bg=colour237,bold
set -g message-style fg=colour117,bg=colour235,bold

set -g visual-bell on
set -s escape-time 0

# Use a prefix that doesn't conflict with readline/emacs.
set -g prefix C-_


# Keybindings
unbind-key C-b
bind-key C-_ last-window
bind-key _ send-prefix

# Reload/modify config
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"
bind-key M split-window -v "emacs ~/.tmux.conf"

# Basic keybindings.
bind-key Space next-window
bind-key '`' source ~/.tmux.conf
bind-key '*' choose-session
bind-key '"' choose-window
bind-key 'K' confirm-before -p "kill-windows #W? (y/n)" kill-window
bind-key 'N' command-prompt -p "Create new session:" "new-session -s %%"
bind-key '.' command-prompt -p "Move window to:" "swap-window -t '%%'"

# add a few "frill" mappings
bind-key S command-prompt "new-window -n %1 'ssh %1'"
bind-key 'e' new-window -n emacs 'exec emacsclient -nw --alternate-editor='

# Convenience shortcuts.
bind-key '/' command-prompt -p "Open man page for:" "split-window 'exec man %%'"
bind-key 'H' command-prompt -p "Open help for:" "split-window 'exec %% help | less'"
bind-key 'h' command-prompt -p "Open help for:" "split-window 'exec %% --help | less'"
bind-key 'p' split-window 'exec python'
bind-key 'R' respawn-window -k
bind-key 'D' command-prompt -p "Dig:" "split-window 'exec dig %% | LESS= less'"
bind-key 'I' command-prompt -p "Dig:" "split-window 'exec dig -x %% | LESS= less'"

# Window options
setw -g aggressive-resize on
setw -g alternate-screen off
setw -g automatic-rename on
setw -g clock-mode-style 24
setw -g mode-keys vi
setw -g mouse off
setw -g monitor-activity on
setw -g xterm-keys on

# Now, create the main session that others will (via shell init) attach to
new-session -s "${USER}"
# override the global default
set-option -t "${USER}" destroy-unattached off


# Move the default first shell window to #1, start irssi in #0 then
# kill the original shell. This ensures that we don't have a shell
# with wonky SSH_AUTH_SOCK settings but will require we manually start
# a new shell window on first connection to this session.
move-window -s 0 -t 1
new-window -t 0 irssi
kill-window -t 1

# Run optional environment specific stuff
if-shell "[ -f ${HOME}/.tmux-${BDW_CONFIG_TYPE} ]" "source ${HOME}/.tmux-${BDW_CONFIG_TYPE}"